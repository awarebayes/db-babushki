version: "3.7"

services:
  node_service:
    hostname: node_service
    build:
      context: .
      dockerfile: NodeService.Dockerfile
    volumes:
      - ./:/home/node/app/
    ports:
      - "4000:4000"

    command: >
      npm run node_service
    env_file:
      - .env

    networks:
      - some-net

  node_service_2:
    hostname: node_service_2
    build:
      context: .
      dockerfile: NodeService.Dockerfile
    volumes:
      - ./:/home/node/app/
    command: >
      npm run node_service
    env_file:
      - .env
    environment:
      - DB_READONLY=1
    networks:
      - some-net

  node_service_3:
    hostname: node_service_3
    build:
      context: .
      dockerfile: NodeService.Dockerfile
    volumes:
      - ./:/home/node/app/
    command: >
      npm run node_service
    env_file:
      - .env
    environment:
      - DB_READONLY=1
    networks:
      - some-net

  tests:
    build:
      context: .
      dockerfile: NodeService.Dockerfile
    env_file:
      - .env.test
    volumes:
      - ./:/home/node/app/
    command: >
      npm run my_tests
    networks:
      - some-net
    profiles:
      - test
    depends_on:
      db-test:
        condition: service_healthy
  db:
    image: postgres:15-alpine
    restart: always
    ports:
      - "5433:5432"
    networks:
      - some-net
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ../db/postgres-data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    hostname: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ../db/pgadmin:/var/lib/pgadmin
    networks:
      - some-net
    restart: unless-stopped

  db-test:
    image: postgres:15-alpine
    restart: always
    profiles:
      - test
    networks:
      - some-net
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGUSER=postgres

    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "public", "-u", "postgres"]
      interval: 3s
      timeout: 60s
      retries: 5
      start_period: 5s

  minio1:
    image: quay.io/minio/minio:RELEASE.2023-04-20T17-56-55Z
    command: server --console-address ":9001" /data/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    hostname: minio1
    volumes:
      - ../db/minio_storage:/data/minio
    networks:
      - some-net

  nginx:
    image: byjg/nginx-extras
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./frontend/static:/usr/share/nginx/html/static
      - ./nginx.conf:/etc/nginx/nginx.conf

    networks:
      - some-net

networks:
  some-net:
    driver: bridge
    external: true
