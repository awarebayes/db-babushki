// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider         = "zod-prisma-types"
  createInputTypes = false // default is true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  name     String
  isAdmin  Boolean

  grannyId   Int?        @unique
  grandma    Grandma?    @relation(fields: grannyId, references: [id])
  Order      Order[]
  Review     Review[]
  AuthRecord AuthRecord?
}

model AuthRecord {
  id           Int    @id @default(autoincrement())
  username     String @unique
  passwordHash String
  passwordSalt String

  userId Int  @unique
  user   User @relation(fields: userId, references: [id], onDelete: Cascade)
}

model Grandma {
  id          Int     @id @default(autoincrement())
  username    String  @unique
  name        String
  description String
  pictureUrl  String
  timeReply   Int
  rating      Float
  verified    Boolean

  meals  Meal[]
  User   User?
  Order  Order[]
  Review Review[]
}

model Meal {
  id           Int    @id @default(autoincrement())
  name         String
  price        Int
  rating       Float
  pictureUrl   String
  description  String
  grannyId     Int
  cookedBy     String
  cookedByName String

  grandma     Grandma     @relation(fields: [grannyId], references: [id])
  ordersItems OrderItem[]
}

model MealCategories {
  id   Int    @id @default(autoincrement())
  name String
}

model Order {
  id Int @id @default(autoincrement())

  statusId Int
  status   OrderStatus @relation(fields: [statusId], references: [id], onDelete: Cascade)

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  grandmaId Int
  grandma   Grandma @relation(fields: [grandmaId], references: [id], onDelete: Cascade)

  items OrderItem[]
}

model OrderStatus {
  id    Int     @id @default(autoincrement())
  name  String
  Order Order[]
}

model OrderItem {
  id Int @id @default(autoincrement())

  orderId Int
  order   Order @relation(fields: [orderId], references: [id], onDelete: Cascade)

  mealId Int
  meal   Meal @relation(fields: [mealId], references: [id], onDelete: Cascade)

  count Int
}

model Review {
  id Int @id @default(autoincrement())

  grandmaId Int
  grandma   Grandma @relation(fields: [grandmaId], references: [id])

  userId Int
  user   User @relation(fields: [userId], references: [id])

  rating Float
  review String
}
