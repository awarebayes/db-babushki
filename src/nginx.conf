events {

}

http {
  # включаем сжатие
  gzip on;
  # отключаем сжатие для старья
  gzip_disable "msie6";
  # определяет MIME типы, для которых будет работать сжатие
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/jpeg;

  proxy_pass_header Server;

  proxy_cache_methods GET;
  # Задаёт число запросов, после которого ответ будет закэширован.
  proxy_cache_min_uses 1;
  # Задаёт время кэширования для разных кодов ответа.
  proxy_cache_valid 200 302 10m;
  proxy_cache_valid 404 1m;

  upstream main_backend {
    server node_service:4000;
  }


  upstream backend {
    server node_service:4000 weight=2;
    server node_service_2:4000 weight=1;
    server node_service_3:4000 weight=1;
  }

   # создадим переменную, которая будет содержать бекенд, на который надо пойти (upstream_location)
  map $request_method $upstream_location { 
    GET     backend;
    default main_backend;
  }

  map $request_uri $api_uri { # /api/v1/statistics -> /statistics
      ~^/api/v1(.*)$ $1; # /api/v1{$1} -> $1
  }

  server { 
    listen 80;
    more_set_headers 'Server: Babushki';


    location ~ /api/v1/(.*) {
      proxy_pass http://backend/api/$1;
      proxy_no_cache 1;
      proxy_set_header Host backend;
      proxy_set_header X-Forwarded-For $remote_addr;
    }

     

    location = /api/v1/ {
      proxy_pass          http://backend/api_docs/;
      proxy_http_version 1.1;
      proxy_redirect     off;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location = /api/v1/swagger.json {
      proxy_pass http://backend/api_docs/swagger.json;
    }

    location = /api/v1/swagger-ui-bundle.js {
      proxy_pass http://backend/api_docs/swagger-ui-bundle.js;
    }

    location = /api/v1/swagger-ui-init.js {
      proxy_pass http://backend/api_docs/swagger-ui-init.js;
    }

    location = /api/v1/swagger-ui-standalone-preset.js {
      proxy_pass http://backend/api_docs/swagger-ui-standalone-preset.js;
    }

    location = /api/v1/swagger-ui.css {
      proxy_pass http://backend/api_docs/swagger-ui.css;
    }

    location = /api/v1/index.html {
      proxy_pass http://backend/api_docs/index.html;
    }

    location /storage {
        proxy_pass http://minio1:9001/;
    }

    location / {
      root /usr/share/nginx/html/static;
      index index.html;
    }

    location /test {
      return 301 http://localhost;
    }


    location ~ /mirror1/api/v1/(.*) {
        proxy_pass http://main_backend/api/v1/$1;
        proxy_no_cache 1;
        proxy_set_header Host backend;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location = /mirror/api/v1/ {
      proxy_pass          http://main_backend/api_docs/;
      proxy_http_version 1.1;
      proxy_redirect     off;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
    }

    location = /mirror/api/v1/swagger.json {
      proxy_pass http://backend/api_docs/swagger.json;
    }

    location = /mirror/api/v1/swagger-ui-bundle.js {
      proxy_pass http://backend/api_docs/swagger-ui-bundle.js;
    }

    location = /mirror/api/v1/swagger-ui-init.js {
      proxy_pass http://backend/api_docs/swagger-ui-init.js;
    }

    location = /mirror/api/v1/swagger-ui-standalone-preset.js {
      proxy_pass http://backend/api_docs/swagger-ui-standalone-preset.js;
    }

    location = /mirror/api/v1/swagger-ui.css {
      proxy_pass http://backend/api_docs/swagger-ui.css;
    }

    location = /mirror/api/v1/index.html {
      proxy_pass http://backend/api_docs/index.html;
    }


    location /status {
        stub_status;
    }

 
    location = /documentation {
      charset UTF-8;
      alias /usr/share/nginx/html/static/readme.md;
    }

    location ^~ /admin/ {
        proxy_set_header X-Script-Name /admin;

        proxy_set_header Host $host;

        proxy_pass http://pgadmin/;
        proxy_redirect off;
    }

  }
}
